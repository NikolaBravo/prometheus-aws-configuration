#cloud-config
users:
  - name: alertmanager
    system: true

  - name: davidking
    groups: sudo
    shell: /bin/bash
    sudo: ALL=(ALL) NOPASSWD:ALL
    ssh-authorized-keys:
      - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQC2a1hthz3fr/odHHUDPaRT0NpHNF6AK3LrnMm9x737eP3SQBejjqSMreUikYh36jTv4w5LiQ63npVlMp1zlQXAtc11st2tVEM+KiQQgWLlVUzNQCN/LPPlDOtR0oYDYUVQo/fZ5EBK6pi5f3jA9tMXghnSNvoUELSvuJmKYgRHRr4k1nl+8SKFs/ZdjEJDzZAnoZe8CEYT4J43HW0EKieUBf0KhbxUXfNNoe17FF5CH3z3/06Ebq6JaqinwUOb357SlV6k5+NARHgwITKYvajVKwrSggx/6WgcjEEKLwZWiHguPJakkr+oM7RKTn2kAeLEkegZGimYatsRxt592W+GzMpf5JXEfVnvfzQ39cSHHb4OLpCGDTXJadPgy7dNyRiHvwJD0qC6x4sTpAwWqQZxozAYXtKSg02v/b0Ai30AduHGhcaIV3/l/jkcluJ3LVtFp7xIyk4EvTnuJAC4+xRN42f+Zcv2iRc8/q4JRSiJ9XC/k4+3wrJ2bE7wLFWpsr91TAfvqg4kEOXA1KKIcASu+8Q5CFR3dGdSWNK/FYNReS1QMsrZp4tZvm50mL7H0NokQGkGTvBbLdZ7Lqj7tPe8uf4XoTxMbAmRUuhZOps0pgL6IIigDhUeXcnczIlg2lQRcIRxu9EQ44Qv+0QZp+5eZLJxgcklg4Z4JbHr7REb0w== david.king@digital.cabinet-office.gov.uk

  - name: jonathanhallam
    groups: sudo
    shell: /bin/bash
    sudo: ALL=(ALL) NOPASSWD:ALL
    ssh-authorized-keys:
      - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQCbhuGtTqXfhGAJUREY8foyy522FQ9djFwYAat0QU2C8eg8TnoiGOxdJaHg3JRikDEJVrpjGyCs3PJMUoTOzeb29qt99fhMAajSEohAXZVFbDv8RUCE3S6EiZNi/F4aV9Mq86rbKOgJTPAnIBr3En6qnBR7Z7Xvu8ooVcAiB8dozFFSbgNitpjVLIFUx10LnzqwtI4TrLKP+aM5HwmIZ0B90cJOwfMOaD2tOqldRfowcaYAX0zloUxS6lTS8PSwLr2T27xT44OhvG6aNyVzNbXkhZphQ5qEPI0NIzjtb3GkiE17ApZIF3iAa422ONlz+LbGQrjFdAtvCgjDZ3McA+gddbbS1s5cg+dU7X6HM3F8bfasd4B1UJwRA18XfLHDhSRQsETfLsDHUgrosJTLAxmx41SPY8CSShVDx6q9M6POalzqU/2V924RvaODrbimfGBR64JZ8mbvnNB9kwxm2dBx+jDx51dgTs7k3+YjvYKWRVq1qJtgFFQcaH1nZagrj9SCKJ7Won5UfsZM32VS6QNVtavCpVSeaz26ajuMBnKqNIAP2fL0j/QDsRdBCrZGAH09QJ2Y1+N2I4pjb0Cr5/dbd++hf3rdNdRt/5pYjlr1x1enPTqfsZKKuSNKR+lkp6ttx7dlphxtRzqsuQqz3tImKwUXkxaMeKmSb4j/j7bGTw== jonathan.hallam@digital.cabinet-office.gov.uk

  - name: davidjeche
    groups: sudo
    shell: /bin/bash
    sudo: ALL=(ALL) NOPASSWD:ALL
    ssh-authorized-keys:
      - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQCmTARrfMKQQWI8f3IWLDXUc+M79rY2UgEvRxEXObMcCCwT7NyOw12Es2tmo4iu633JB4vtZNfmkk1mrPiD1SHDr5KYMGuGwwYxy4LKn6dl4lM66XXmnFAST/O/13rLJEJk6sCRUqgbtIg/iI3om3iANaWALlrid3GM9LISEN1F2UAXH2tDRo4W7Ctq4nUu+IzeRjR5fbfwrsjaD64pp0dTjJK60lShcfAGTP5zTmiyRC55KBt7XeopVOZ8KkoCfnJXnxLJLu7vAzMgarIvsnCqfE0MRftd6zEUe4a3MEoLZbB4Gbx7egMUSrABIdf35yD9IHvNc3+YJpwXNl3NybPjyKs8xa8blJ3BpYvOup+/oToPk7/T9LGtf95vmR3g5c2deC1XIHaR1ghjx+9OaZzeVF/C0pQZ7YnWFEjU4JRm4hXMAy8Nv6Wvkhudq2bNNjWqfPgRLDnF0wmFWa4RYtaquqMoBkMVqbyCVWaIz99MDlm2O0Gz8inmuIghkrjFLSFfZ0XBpz1Ei4/2go0Swr0PEmFJ90jsBwsmKjmTAtuIk/MpGgY/mTcmQ73g7YqGQjwExYQQuhXoB8OD/GC1EVwESGDc2UHyxizY+jQ+v1u33TR2ldaPbIxY2qzWEE12wM0qfEApyC4k3+ZzJahBzBXf6fRQqFyNNWv7Z4aMJJ3bZw== david.jeche@digital.cabinet-office.gov.uk

  - name: kentsang
    groups: sudo
    shell: /bin/bash
    sudo: ALL=(ALL) NOPASSWD:ALL
    ssh-authorized-keys:
      - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDRWn9zLfFsuybkeW3aUYxp3bN5ID6bzPq8iJH8P5FWasaWo2b0WX6TigpmlAUs5pPUk2Ed4aPccR54Z2LNT+6noQCMID3SCKRzUOlnmOtF9WWrhat3wOIyFhF71PrhcKFdb7Lsf60853v1QgAFaFuWWA5pRmTdrQ7W0ikIqQRMoUzLZzbl+fzmN+gF8Os7ZuJo9Et3pDHwVWrkbqNWRITrTwmPPl8BnnkOZzWibQ+WkYKB1pn9pEltv+pwZffUIU8xpgw1jHShY6qdjgKk9fFiWh5IJjjS5Uw0BDHR6sLe8e4t03sbMhSM6Ch7p6oN6WVtM3w7HyZlyoA8Iy/1jDTP kentsang@gds3982.local

  - name: danielroseman
    groups: sudo
    shell: /bin/bash
    sudo: ALL=(ALL) NOPASSWD:ALL
    ssh-authorized-keys:
      - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQDcz+lw8fLHK2IHyIOs4w29QO0zT6I98l0m5JrapSsK9ZUASS2svj7EvinMdJJ2NQQ4fqhYMD67xB2gzhug/SEpYpIicg3aUDdQEJyQulWLigH9rRFYjFv5d6jkFkRUHc4XRd31PFc6tjTgpstzPaL1uO20XlDIaU1U2+LyUplENVkVtTuNqyVPfg8qjtzHGWswr16E8ouKtfzAuTAmkuVS19cjXiflSuXD5v8vXsVzpNbyoXDjoeu443ZY8MOavZMD/7ClrZd43m/Yi154I42xJ68uM+3R4uuU6OQgcOnNhwRnyJ21jFk7ohnipVmTxB5oUjXuh0gPQSfOkCQPvddwsd/0dmfLEKidAIrwcUllI0qngSjkei0M693Wn9zJmdYoyOTpksCpEsmSpeF5ALYOXedlZfa6WuJu7SxozfuaQScJONu5TZbIS5mM/1zRVwB15cdZ+qgH1WCG9wjFWTH3CerqfnMxqpB80nxHcKD6r/FJ7tRVpHY9CaW9iAjZ97d7Hh6MTb8Jksg1F0os0c/hSOChFX/hJpmeGnQIEdu4hE7U/zt7gVxalx6446BOPdDePDcPae8ngQAutRDNI6/MtL0QAcxDUEnW2KD9QVatvwEh3kdta+EJBUOiWAjEBlpMa34509mBI1H8JKa3wAxpQ0u9tzIzsXzoxsYiUPjXkQ== daniel.roseman@digital.cabinet-office.gov.uk

  - name: deanwilson
    groups: sudo
    shell: /bin/bash
    sudo: ALL=(ALL) NOPASSWD:ALL
    ssh-authorized-keys:
      - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQDAmm4kdSdiwYnIhn9wcuNGmTQllNNcaKALRT8z/3Q0Z+vSkqnhIA6gHWFZn7ZZ0u8Zfv5rig+lyJNPZ6e+1uwxCtLABNe8G1NPUdgqhirblBDy0uhLaeiCcwOP/oiZ/M94+LxM2aPLoA9rwR47rviXUwiJ3rjQV4IZzGDuB/p1d7ttaBra39HMkqz5K1Y+I7T9mhCuoU4Rd88NHVx4NmseUQTStdulH6sy+shARMUg2M4PoXEKcWasJUd2s7CuuWa3ZHjL7EQePM1eqgUFPQloac98f3RUVAfVb9AbPhA4t/zewOZS1sYf1kxO6lrGw1P7qbXTmHUR5eTGeW/hKkZSbz5VZeN6ZtihQ3mogzmP+bsDaiuAfF2LQWijwQI7M7xjk7NBjvFfCkmnw1MymSC26vnIrb+ITfPefgi2M+uaL6HXsQvgdEL6VT1pTewD8494UJtPARf472npBWXrMjDpier711rMY5HtSwenq6KE0DHFp1bFXZ+gUZeMzvyIynB4HmyNGZpZf41Lh8uenOy49/ouO9aHMN8lcRLEz9aPQXyjAWT+FooXRQjT+BZWZ3A5t1IJB7Mfbxsah+7wE+CHOtpydL4bDR+wGIR4dm65YegeBviMN2FlCle6CnU2baDK23LTCYJalBV8K17a9ydxvHgelf0nvabTb/f93PQhjQ== deanwilson@gds0092.local

  - name: davidmcdonald
    groups: sudo
    shell: /bin/bash
    sudo: ALL=(ALL) NOPASSWD:ALL
    ssh-authorized-keys:
      - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQCW0r06S4dA8iyzMmEzaO54pi38e6ZlqaQYDgxZHmx8WKpeKLvjOUppUAs93zla47HdmBlxOzIqF30ZWvR9Rn+TckZOk9M2RcDjpYk2PRFkqxfU8at4O6OyfbbolUoYDDj7837DZv2GMGpFool5IeU838ik3B0/KWhzKDA9JP2vRtZy7RTb3wx3uPh8akb4CksNgJ570c1fdMhWWLR6x53QzOyiQekZfmRYX+emO4dTBFO4HAI6hvXC4DLHWKRPFWhkJO36kMUoykbY1VkO0mFZa3E6OoYHNYESI1Gams4ZVedL+BLTkX35MYQDSiwFFoqIGf/w6lkZ+6LutD2iiN2pSJowHjEqg4TkTPsYW8z00li5qpkVSGdyCLy3U1bZS3rUlPeRu7olIiSYGIgr9vDcAZfoz6MhF0uaEErpBAf0uLMm/hTMRnQ4vuyvNYazIlgFnkDdX9A9xltTZPKrPSPYH6BjIud4JciR5wCRjWky8LR7rLMMQke/+aWq/NVfLSLu7gNBSbYEwE2wj8/ZZ9IzVRf8wnEOa0J2aQikG13zMY42Qn3Sy0yVlXH2qtbjghPU8FWqKTDqvd1P75tFPixCao07RUY/9IgCQzZSwyhJVW3gnaRPyliOWBY9UkhbnRSJ5GKlSBuoUiFJwF6EqVEWZxV0FjZZo3l7D4zpwHB1pw== idavidmcdonald@me.com

package_update: true
package_upgrade: true
packages: ['chrony', 'nginx']

write_files:
  - content: |
      global:
    owner: root:root
    path: /etc/alertmanager/alertmanager.yml
    permissions: 0644
  - content: |
      [Unit]
      Description=alertmanager

      [Service]
      User=alertmanager
      ExecStart=/opt/alertmanager/alertmanager --config.file="/etc/alertmanager/alertmanager.yml"
      WorkingDirectory=/opt/alertmanager

      [Install]
      WantedBy = multi-user.target
    owner: root:root
    path: /etc/systemd/system/alertmanager.service
    permissions: 0644
  - owner: root:root
    path: /etc/filebeat/filebeat.yml
    permissions: 0444
    content: |
      filebeat.prospectors:
      - type: log
        enabled: true
        paths:
          - /var/log/nginx/*.log
        fields:
          type: nginx-access
        fields_under_root: true
        encoding: utf-8
        exclude_files: [".gz"]
        ignore_older: 3h

      output.logstash:
        hosts: ["${logstash_endpoint}:${logstash_port}"]
        loadbalance: true
        ssl.enabled: true
  - content: |
      server {
        listen 80 default_server;
        server_name ${domain_name};

        location / {
          proxy_pass  http://localhost:9093;
        }
      }
    owner: root:root
    path: /etc/nginx/sites-available/default
    permissions: 0644
  - content: |
      global:
        # The smarthost and SMTP sender used for mail notifications.
        smtp_smarthost: 'localhost:25'
        smtp_from: 'alertmanager@example.org'
        smtp_auth_username: 'alertmanager'
        smtp_auth_password: 'password'

      # The directory from which notification templates are read.
      templates:
      - '/etc/alertmanager/template/*.tmpl'

      # The root route on which each incoming alert enters.
      route:
        # The labels by which incoming alerts are grouped together. For example,
        # multiple alerts coming in for cluster=A and alertname=LatencyHigh would
        # be batched into a single group.
        group_by: ['alertname', 'cluster', 'service']

        # When a new group of alerts is created by an incoming alert, wait at
        # least 'group_wait' to send the initial notification.
        # This way ensures that you get multiple alerts for the same group that start
        # firing shortly after another are batched together on the first
        # notification.
        group_wait: 30s

        # When the first notification was sent, wait 'group_interval' to send a batch
        # of new alerts that started firing for that group.
        group_interval: 5m

        # If an alert has successfully been sent, wait 'repeat_interval' to
        # resend them.
        repeat_interval: 3h

        # A default receiver
        receiver: tools-team-demo-general

        # All the above attributes are inherited by all child routes and can
        # overwritten on each.

        # The child route trees.
        routes:
        # This routes performs a regular expression match on alert labels to
        # catch alerts that are related to a list of services.
        - match_re:
            service: ^(foo1|foo2|baz)$
          receiver: tools-team-demo-general
          # The service has a sub-route for critical alerts, any alerts
          # that do not match, i.e. severity != critical, fall-back to the
          # parent node and are sent to 'team-X-mails'
        - match:
            severity: P1
          receiver: tools-team-demo-general

          routes:
          - match:
              severity: critical
            receiver: tools-team-demo-random

        # This route handles all alerts coming from a database service. If there's
        # no team to handle it, it defaults to the DB team.
        - match:
            service: database
          receiver: tools-team-demo-general
          # Also group alerts by affected database.
          group_by: [alertname, cluster, database]
          routes:
          - match:
              owner: team-X
            receiver: tools-team-demo-general
          - match:
              owner: team-Y
            receiver: tools-team-demo-general


      # Inhibition rules allow to mute a set of alerts given that another alert is
      # firing.
      # We use this to mute any warning-level notifications if the same alert is
      # already critical.
      inhibit_rules:
      - source_match:
          severity: 'critical'
        target_match:
          severity: 'warning'
        # Apply inhibition if the alertname is the same.
        equal: ['alertname', 'cluster', 'service']

      receivers:
      - name: 'tools-team-demo-general'
        slack_configs:
        - api_url: https://hooks.slack.com/services/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
          channel: '#general'

      - name: 'tools-team-demo-infradev'
        slack_configs:
        - api_url: https://hooks.slack.com/services/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
          channel: '#infra-dev'

      - name: 'tools-team-demo-random'
        slack_configs:
        - api_url: https://hooks.slack.com/services/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
          channel: '#random'
    owner: alertmanager:alertmanager
    path: /etc/alertmanager/alertmanager.yml
    permissions: 0644
runcmd:
  - [ whoami ]
  - [ deluser, ubuntu ]
  - [ service, sshd, restart ]
  - [ bash, -c, "echo 'server 169.254.169.123 prefer iburst' >> /etc/chrony/chrony.conf" ] # Configure Amazon Time Sync
  - [ service, chrony, restart ]
  - [ mkdir, /opt/alertmanager ]
  - [ chown, -R, "alertmanager:alertmanager", /opt/alertmanager ]
  - [ systemctl, enable, --now, alertmanager.service ]
  - [ add-apt-repository, "ppa:certbot/certbot", -y ]
  - [ wget, -q, "https://github.com/prometheus/alertmanager/releases/download/v${alertmanager_version}/alertmanager-${alertmanager_version}.linux-amd64.tar.gz", -P, /tmp ]
  - [ tar, xzvf, /tmp/alertmanager-${alertmanager_version}.linux-amd64.tar.gz, --strip-components=1, -C, /opt/alertmanager ]
  - [ bash, -c, "echo 'deb https://artifacts.elastic.co/packages/6.x/apt stable main' >> /etc/apt/sources.list.d/elastic-6.x.list" ]
  - [ bash, -c, "wget -qO - https://artifacts.elastic.co/GPG-KEY-elasticsearch | apt-key add -" ]
  - [ apt-get, update ]
  - 'apt-get install -o Dpkg::Options::="--force-confold" filebeat python-certbot-nginx -y'
  - [ certbot, ${real_certificate == "yes" ? "" : "--staging"}, -d, ${domain_name}, -m, ${lets_encrypt_email}, --authenticator, standalone, --installer, nginx, --pre-hook, "nginx -s stop", --post-hook, "nginx", --agree-tos, -n, --redirect ]
  - [ systemctl, enable, filebeat ]
  - [ reboot ]
